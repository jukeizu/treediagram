// Code generated by protoc-gen-go. DO NOT EDIT.
// source: handling.proto

package handling

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CommandRequest struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	CorrelationId        string   `protobuf:"bytes,2,opt,name=correlationId,proto3" json:"correlationId,omitempty"`
	Bot                  *User    `protobuf:"bytes,3,opt,name=bot,proto3" json:"bot,omitempty"`
	Author               *User    `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	ChannelId            string   `protobuf:"bytes,5,opt,name=channelId,proto3" json:"channelId,omitempty"`
	ServerId             string   `protobuf:"bytes,6,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Mentions             []*User  `protobuf:"bytes,7,rep,name=mentions,proto3" json:"mentions,omitempty"`
	Content              string   `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandRequest) Reset()         { *m = CommandRequest{} }
func (m *CommandRequest) String() string { return proto.CompactTextString(m) }
func (*CommandRequest) ProtoMessage()    {}
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{0}
}
func (m *CommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandRequest.Unmarshal(m, b)
}
func (m *CommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandRequest.Marshal(b, m, deterministic)
}
func (dst *CommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandRequest.Merge(dst, src)
}
func (m *CommandRequest) XXX_Size() int {
	return xxx_messageInfo_CommandRequest.Size(m)
}
func (m *CommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommandRequest proto.InternalMessageInfo

func (m *CommandRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *CommandRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *CommandRequest) GetBot() *User {
	if m != nil {
		return m.Bot
	}
	return nil
}

func (m *CommandRequest) GetAuthor() *User {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *CommandRequest) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *CommandRequest) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *CommandRequest) GetMentions() []*User {
	if m != nil {
		return m.Mentions
	}
	return nil
}

func (m *CommandRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CommandReply struct {
	Results              []*Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CommandReply) Reset()         { *m = CommandReply{} }
func (m *CommandReply) String() string { return proto.CompactTextString(m) }
func (*CommandReply) ProtoMessage()    {}
func (*CommandReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{1}
}
func (m *CommandReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandReply.Unmarshal(m, b)
}
func (m *CommandReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandReply.Marshal(b, m, deterministic)
}
func (dst *CommandReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandReply.Merge(dst, src)
}
func (m *CommandReply) XXX_Size() int {
	return xxx_messageInfo_CommandReply.Size(m)
}
func (m *CommandReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandReply.DiscardUnknown(m)
}

var xxx_messageInfo_CommandReply proto.InternalMessageInfo

func (m *CommandReply) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type IsCommandReply struct {
	IsCommand            bool     `protobuf:"varint,1,opt,name=isCommand,proto3" json:"isCommand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsCommandReply) Reset()         { *m = IsCommandReply{} }
func (m *IsCommandReply) String() string { return proto.CompactTextString(m) }
func (*IsCommandReply) ProtoMessage()    {}
func (*IsCommandReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{2}
}
func (m *IsCommandReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsCommandReply.Unmarshal(m, b)
}
func (m *IsCommandReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsCommandReply.Marshal(b, m, deterministic)
}
func (dst *IsCommandReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsCommandReply.Merge(dst, src)
}
func (m *IsCommandReply) XXX_Size() int {
	return xxx_messageInfo_IsCommandReply.Size(m)
}
func (m *IsCommandReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IsCommandReply.DiscardUnknown(m)
}

var xxx_messageInfo_IsCommandReply proto.InternalMessageInfo

func (m *IsCommandReply) GetIsCommand() bool {
	if m != nil {
		return m.IsCommand
	}
	return false
}

type JobRequest struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string    `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Content              string    `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	User                 string    `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Destination          string    `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
	Schedule             *Schedule `protobuf:"bytes,6,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Enabled              bool      `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JobRequest) Reset()         { *m = JobRequest{} }
func (m *JobRequest) String() string { return proto.CompactTextString(m) }
func (*JobRequest) ProtoMessage()    {}
func (*JobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{3}
}
func (m *JobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobRequest.Unmarshal(m, b)
}
func (m *JobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobRequest.Marshal(b, m, deterministic)
}
func (dst *JobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobRequest.Merge(dst, src)
}
func (m *JobRequest) XXX_Size() int {
	return xxx_messageInfo_JobRequest.Size(m)
}
func (m *JobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobRequest proto.InternalMessageInfo

func (m *JobRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JobRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *JobRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *JobRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *JobRequest) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *JobRequest) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *JobRequest) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

type JobReply struct {
	Results              []*Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JobReply) Reset()         { *m = JobReply{} }
func (m *JobReply) String() string { return proto.CompactTextString(m) }
func (*JobReply) ProtoMessage()    {}
func (*JobReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{4}
}
func (m *JobReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobReply.Unmarshal(m, b)
}
func (m *JobReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobReply.Marshal(b, m, deterministic)
}
func (dst *JobReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobReply.Merge(dst, src)
}
func (m *JobReply) XXX_Size() int {
	return xxx_messageInfo_JobReply.Size(m)
}
func (m *JobReply) XXX_DiscardUnknown() {
	xxx_messageInfo_JobReply.DiscardUnknown(m)
}

var xxx_messageInfo_JobReply proto.InternalMessageInfo

func (m *JobReply) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type IsJobReply struct {
	IsJob                bool     `protobuf:"varint,1,opt,name=isJob,proto3" json:"isJob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsJobReply) Reset()         { *m = IsJobReply{} }
func (m *IsJobReply) String() string { return proto.CompactTextString(m) }
func (*IsJobReply) ProtoMessage()    {}
func (*IsJobReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{5}
}
func (m *IsJobReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsJobReply.Unmarshal(m, b)
}
func (m *IsJobReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsJobReply.Marshal(b, m, deterministic)
}
func (dst *IsJobReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsJobReply.Merge(dst, src)
}
func (m *IsJobReply) XXX_Size() int {
	return xxx_messageInfo_IsJobReply.Size(m)
}
func (m *IsJobReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IsJobReply.DiscardUnknown(m)
}

var xxx_messageInfo_IsJobReply proto.InternalMessageInfo

func (m *IsJobReply) GetIsJob() bool {
	if m != nil {
		return m.IsJob
	}
	return false
}

type Schedule struct {
	Minute               string   `protobuf:"bytes,1,opt,name=minute,proto3" json:"minute,omitempty"`
	Hour                 string   `protobuf:"bytes,2,opt,name=hour,proto3" json:"hour,omitempty"`
	DayOfMonth           string   `protobuf:"bytes,3,opt,name=dayOfMonth,proto3" json:"dayOfMonth,omitempty"`
	Month                string   `protobuf:"bytes,4,opt,name=month,proto3" json:"month,omitempty"`
	DayOfWeek            string   `protobuf:"bytes,5,opt,name=dayOfWeek,proto3" json:"dayOfWeek,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schedule) Reset()         { *m = Schedule{} }
func (m *Schedule) String() string { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()    {}
func (*Schedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{6}
}
func (m *Schedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schedule.Unmarshal(m, b)
}
func (m *Schedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schedule.Marshal(b, m, deterministic)
}
func (dst *Schedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schedule.Merge(dst, src)
}
func (m *Schedule) XXX_Size() int {
	return xxx_messageInfo_Schedule.Size(m)
}
func (m *Schedule) XXX_DiscardUnknown() {
	xxx_messageInfo_Schedule.DiscardUnknown(m)
}

var xxx_messageInfo_Schedule proto.InternalMessageInfo

func (m *Schedule) GetMinute() string {
	if m != nil {
		return m.Minute
	}
	return ""
}

func (m *Schedule) GetHour() string {
	if m != nil {
		return m.Hour
	}
	return ""
}

func (m *Schedule) GetDayOfMonth() string {
	if m != nil {
		return m.DayOfMonth
	}
	return ""
}

func (m *Schedule) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *Schedule) GetDayOfWeek() string {
	if m != nil {
		return m.DayOfWeek
	}
	return ""
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{7}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Result struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Embed                *Embed   `protobuf:"bytes,2,opt,name=embed,proto3" json:"embed,omitempty"`
	Tts                  bool     `protobuf:"varint,3,opt,name=tts,proto3" json:"tts,omitempty"`
	Files                []*File  `protobuf:"bytes,4,rep,name=files,proto3" json:"files,omitempty"`
	IsPrivateMessage     bool     `protobuf:"varint,5,opt,name=isPrivateMessage,proto3" json:"isPrivateMessage,omitempty"`
	IsRedirect           bool     `protobuf:"varint,6,opt,name=isRedirect,proto3" json:"isRedirect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{8}
}
func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (dst *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(dst, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Result) GetEmbed() *Embed {
	if m != nil {
		return m.Embed
	}
	return nil
}

func (m *Result) GetTts() bool {
	if m != nil {
		return m.Tts
	}
	return false
}

func (m *Result) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *Result) GetIsPrivateMessage() bool {
	if m != nil {
		return m.IsPrivateMessage
	}
	return false
}

func (m *Result) GetIsRedirect() bool {
	if m != nil {
		return m.IsRedirect
	}
	return false
}

type EmbedFooter struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	IconUrl              string   `protobuf:"bytes,2,opt,name=iconUrl,proto3" json:"iconUrl,omitempty"`
	ProxyIconUrl         string   `protobuf:"bytes,3,opt,name=proxyIconUrl,proto3" json:"proxyIconUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmbedFooter) Reset()         { *m = EmbedFooter{} }
func (m *EmbedFooter) String() string { return proto.CompactTextString(m) }
func (*EmbedFooter) ProtoMessage()    {}
func (*EmbedFooter) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{9}
}
func (m *EmbedFooter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmbedFooter.Unmarshal(m, b)
}
func (m *EmbedFooter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmbedFooter.Marshal(b, m, deterministic)
}
func (dst *EmbedFooter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmbedFooter.Merge(dst, src)
}
func (m *EmbedFooter) XXX_Size() int {
	return xxx_messageInfo_EmbedFooter.Size(m)
}
func (m *EmbedFooter) XXX_DiscardUnknown() {
	xxx_messageInfo_EmbedFooter.DiscardUnknown(m)
}

var xxx_messageInfo_EmbedFooter proto.InternalMessageInfo

func (m *EmbedFooter) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *EmbedFooter) GetIconUrl() string {
	if m != nil {
		return m.IconUrl
	}
	return ""
}

func (m *EmbedFooter) GetProxyIconUrl() string {
	if m != nil {
		return m.ProxyIconUrl
	}
	return ""
}

type EmbedImage struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ProxyUrl             string   `protobuf:"bytes,2,opt,name=proxyUrl,proto3" json:"proxyUrl,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmbedImage) Reset()         { *m = EmbedImage{} }
func (m *EmbedImage) String() string { return proto.CompactTextString(m) }
func (*EmbedImage) ProtoMessage()    {}
func (*EmbedImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{10}
}
func (m *EmbedImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmbedImage.Unmarshal(m, b)
}
func (m *EmbedImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmbedImage.Marshal(b, m, deterministic)
}
func (dst *EmbedImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmbedImage.Merge(dst, src)
}
func (m *EmbedImage) XXX_Size() int {
	return xxx_messageInfo_EmbedImage.Size(m)
}
func (m *EmbedImage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmbedImage.DiscardUnknown(m)
}

var xxx_messageInfo_EmbedImage proto.InternalMessageInfo

func (m *EmbedImage) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *EmbedImage) GetProxyUrl() string {
	if m != nil {
		return m.ProxyUrl
	}
	return ""
}

func (m *EmbedImage) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *EmbedImage) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type EmbedThumbnail struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ProxyUrl             string   `protobuf:"bytes,2,opt,name=proxyUrl,proto3" json:"proxyUrl,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmbedThumbnail) Reset()         { *m = EmbedThumbnail{} }
func (m *EmbedThumbnail) String() string { return proto.CompactTextString(m) }
func (*EmbedThumbnail) ProtoMessage()    {}
func (*EmbedThumbnail) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{11}
}
func (m *EmbedThumbnail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmbedThumbnail.Unmarshal(m, b)
}
func (m *EmbedThumbnail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmbedThumbnail.Marshal(b, m, deterministic)
}
func (dst *EmbedThumbnail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmbedThumbnail.Merge(dst, src)
}
func (m *EmbedThumbnail) XXX_Size() int {
	return xxx_messageInfo_EmbedThumbnail.Size(m)
}
func (m *EmbedThumbnail) XXX_DiscardUnknown() {
	xxx_messageInfo_EmbedThumbnail.DiscardUnknown(m)
}

var xxx_messageInfo_EmbedThumbnail proto.InternalMessageInfo

func (m *EmbedThumbnail) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *EmbedThumbnail) GetProxyUrl() string {
	if m != nil {
		return m.ProxyUrl
	}
	return ""
}

func (m *EmbedThumbnail) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *EmbedThumbnail) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type EmbedVideo struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ProxyUrl             string   `protobuf:"bytes,2,opt,name=proxyUrl,proto3" json:"proxyUrl,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmbedVideo) Reset()         { *m = EmbedVideo{} }
func (m *EmbedVideo) String() string { return proto.CompactTextString(m) }
func (*EmbedVideo) ProtoMessage()    {}
func (*EmbedVideo) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{12}
}
func (m *EmbedVideo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmbedVideo.Unmarshal(m, b)
}
func (m *EmbedVideo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmbedVideo.Marshal(b, m, deterministic)
}
func (dst *EmbedVideo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmbedVideo.Merge(dst, src)
}
func (m *EmbedVideo) XXX_Size() int {
	return xxx_messageInfo_EmbedVideo.Size(m)
}
func (m *EmbedVideo) XXX_DiscardUnknown() {
	xxx_messageInfo_EmbedVideo.DiscardUnknown(m)
}

var xxx_messageInfo_EmbedVideo proto.InternalMessageInfo

func (m *EmbedVideo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *EmbedVideo) GetProxyUrl() string {
	if m != nil {
		return m.ProxyUrl
	}
	return ""
}

func (m *EmbedVideo) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *EmbedVideo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

type EmbedProvider struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmbedProvider) Reset()         { *m = EmbedProvider{} }
func (m *EmbedProvider) String() string { return proto.CompactTextString(m) }
func (*EmbedProvider) ProtoMessage()    {}
func (*EmbedProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{13}
}
func (m *EmbedProvider) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmbedProvider.Unmarshal(m, b)
}
func (m *EmbedProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmbedProvider.Marshal(b, m, deterministic)
}
func (dst *EmbedProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmbedProvider.Merge(dst, src)
}
func (m *EmbedProvider) XXX_Size() int {
	return xxx_messageInfo_EmbedProvider.Size(m)
}
func (m *EmbedProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_EmbedProvider.DiscardUnknown(m)
}

var xxx_messageInfo_EmbedProvider proto.InternalMessageInfo

func (m *EmbedProvider) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *EmbedProvider) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EmbedAuthor struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IconUrl              string   `protobuf:"bytes,3,opt,name=iconUrl,proto3" json:"iconUrl,omitempty"`
	ProxyIconUrl         string   `protobuf:"bytes,4,opt,name=proxyIconUrl,proto3" json:"proxyIconUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmbedAuthor) Reset()         { *m = EmbedAuthor{} }
func (m *EmbedAuthor) String() string { return proto.CompactTextString(m) }
func (*EmbedAuthor) ProtoMessage()    {}
func (*EmbedAuthor) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{14}
}
func (m *EmbedAuthor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmbedAuthor.Unmarshal(m, b)
}
func (m *EmbedAuthor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmbedAuthor.Marshal(b, m, deterministic)
}
func (dst *EmbedAuthor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmbedAuthor.Merge(dst, src)
}
func (m *EmbedAuthor) XXX_Size() int {
	return xxx_messageInfo_EmbedAuthor.Size(m)
}
func (m *EmbedAuthor) XXX_DiscardUnknown() {
	xxx_messageInfo_EmbedAuthor.DiscardUnknown(m)
}

var xxx_messageInfo_EmbedAuthor proto.InternalMessageInfo

func (m *EmbedAuthor) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *EmbedAuthor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EmbedAuthor) GetIconUrl() string {
	if m != nil {
		return m.IconUrl
	}
	return ""
}

func (m *EmbedAuthor) GetProxyIconUrl() string {
	if m != nil {
		return m.ProxyIconUrl
	}
	return ""
}

type EmbedField struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Inline               bool     `protobuf:"varint,3,opt,name=inline,proto3" json:"inline,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmbedField) Reset()         { *m = EmbedField{} }
func (m *EmbedField) String() string { return proto.CompactTextString(m) }
func (*EmbedField) ProtoMessage()    {}
func (*EmbedField) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{15}
}
func (m *EmbedField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmbedField.Unmarshal(m, b)
}
func (m *EmbedField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmbedField.Marshal(b, m, deterministic)
}
func (dst *EmbedField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmbedField.Merge(dst, src)
}
func (m *EmbedField) XXX_Size() int {
	return xxx_messageInfo_EmbedField.Size(m)
}
func (m *EmbedField) XXX_DiscardUnknown() {
	xxx_messageInfo_EmbedField.DiscardUnknown(m)
}

var xxx_messageInfo_EmbedField proto.InternalMessageInfo

func (m *EmbedField) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EmbedField) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *EmbedField) GetInline() bool {
	if m != nil {
		return m.Inline
	}
	return false
}

type Embed struct {
	Url                  string          `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Type                 string          `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Title                string          `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description          string          `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Timestamp            string          `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Color                int32           `protobuf:"varint,6,opt,name=color,proto3" json:"color,omitempty"`
	Footer               *EmbedFooter    `protobuf:"bytes,7,opt,name=footer,proto3" json:"footer,omitempty"`
	Image                *EmbedImage     `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	Thumbnail            *EmbedThumbnail `protobuf:"bytes,9,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Video                *EmbedVideo     `protobuf:"bytes,10,opt,name=video,proto3" json:"video,omitempty"`
	Provider             *EmbedProvider  `protobuf:"bytes,11,opt,name=provider,proto3" json:"provider,omitempty"`
	Author               *EmbedAuthor    `protobuf:"bytes,12,opt,name=author,proto3" json:"author,omitempty"`
	Fields               []*EmbedField   `protobuf:"bytes,13,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Embed) Reset()         { *m = Embed{} }
func (m *Embed) String() string { return proto.CompactTextString(m) }
func (*Embed) ProtoMessage()    {}
func (*Embed) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{16}
}
func (m *Embed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Embed.Unmarshal(m, b)
}
func (m *Embed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Embed.Marshal(b, m, deterministic)
}
func (dst *Embed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Embed.Merge(dst, src)
}
func (m *Embed) XXX_Size() int {
	return xxx_messageInfo_Embed.Size(m)
}
func (m *Embed) XXX_DiscardUnknown() {
	xxx_messageInfo_Embed.DiscardUnknown(m)
}

var xxx_messageInfo_Embed proto.InternalMessageInfo

func (m *Embed) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Embed) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Embed) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Embed) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Embed) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *Embed) GetColor() int32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *Embed) GetFooter() *EmbedFooter {
	if m != nil {
		return m.Footer
	}
	return nil
}

func (m *Embed) GetImage() *EmbedImage {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Embed) GetThumbnail() *EmbedThumbnail {
	if m != nil {
		return m.Thumbnail
	}
	return nil
}

func (m *Embed) GetVideo() *EmbedVideo {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *Embed) GetProvider() *EmbedProvider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *Embed) GetAuthor() *EmbedAuthor {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Embed) GetFields() []*EmbedField {
	if m != nil {
		return m.Fields
	}
	return nil
}

type File struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ContentType          string   `protobuf:"bytes,2,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Bytes                []byte   `protobuf:"bytes,3,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_handling_175c078ce2a98572, []int{17}
}
func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (dst *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(dst, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *File) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

func init() {
	proto.RegisterType((*CommandRequest)(nil), "handling.CommandRequest")
	proto.RegisterType((*CommandReply)(nil), "handling.CommandReply")
	proto.RegisterType((*IsCommandReply)(nil), "handling.IsCommandReply")
	proto.RegisterType((*JobRequest)(nil), "handling.JobRequest")
	proto.RegisterType((*JobReply)(nil), "handling.JobReply")
	proto.RegisterType((*IsJobReply)(nil), "handling.IsJobReply")
	proto.RegisterType((*Schedule)(nil), "handling.Schedule")
	proto.RegisterType((*User)(nil), "handling.User")
	proto.RegisterType((*Result)(nil), "handling.Result")
	proto.RegisterType((*EmbedFooter)(nil), "handling.EmbedFooter")
	proto.RegisterType((*EmbedImage)(nil), "handling.EmbedImage")
	proto.RegisterType((*EmbedThumbnail)(nil), "handling.EmbedThumbnail")
	proto.RegisterType((*EmbedVideo)(nil), "handling.EmbedVideo")
	proto.RegisterType((*EmbedProvider)(nil), "handling.EmbedProvider")
	proto.RegisterType((*EmbedAuthor)(nil), "handling.EmbedAuthor")
	proto.RegisterType((*EmbedField)(nil), "handling.EmbedField")
	proto.RegisterType((*Embed)(nil), "handling.Embed")
	proto.RegisterType((*File)(nil), "handling.File")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommandClient is the client API for Command service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommandClient interface {
	IsCommand(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*IsCommandReply, error)
	Handle(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandReply, error)
}

type commandClient struct {
	cc *grpc.ClientConn
}

func NewCommandClient(cc *grpc.ClientConn) CommandClient {
	return &commandClient{cc}
}

func (c *commandClient) IsCommand(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*IsCommandReply, error) {
	out := new(IsCommandReply)
	err := c.cc.Invoke(ctx, "/handling.Command/IsCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandClient) Handle(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandReply, error) {
	out := new(CommandReply)
	err := c.cc.Invoke(ctx, "/handling.Command/Handle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommandServer is the server API for Command service.
type CommandServer interface {
	IsCommand(context.Context, *CommandRequest) (*IsCommandReply, error)
	Handle(context.Context, *CommandRequest) (*CommandReply, error)
}

func RegisterCommandServer(s *grpc.Server, srv CommandServer) {
	s.RegisterService(&_Command_serviceDesc, srv)
}

func _Command_IsCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).IsCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/handling.Command/IsCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).IsCommand(ctx, req.(*CommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Command_Handle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).Handle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/handling.Command/Handle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).Handle(ctx, req.(*CommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Command_serviceDesc = grpc.ServiceDesc{
	ServiceName: "handling.Command",
	HandlerType: (*CommandServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsCommand",
			Handler:    _Command_IsCommand_Handler,
		},
		{
			MethodName: "Handle",
			Handler:    _Command_Handle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "handling.proto",
}

// JobClient is the client API for Job service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobClient interface {
	IsJob(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*IsJobReply, error)
	Handle(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobReply, error)
}

type jobClient struct {
	cc *grpc.ClientConn
}

func NewJobClient(cc *grpc.ClientConn) JobClient {
	return &jobClient{cc}
}

func (c *jobClient) IsJob(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*IsJobReply, error) {
	out := new(IsJobReply)
	err := c.cc.Invoke(ctx, "/handling.Job/IsJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobClient) Handle(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobReply, error) {
	out := new(JobReply)
	err := c.cc.Invoke(ctx, "/handling.Job/Handle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobServer is the server API for Job service.
type JobServer interface {
	IsJob(context.Context, *JobRequest) (*IsJobReply, error)
	Handle(context.Context, *JobRequest) (*JobReply, error)
}

func RegisterJobServer(s *grpc.Server, srv JobServer) {
	s.RegisterService(&_Job_serviceDesc, srv)
}

func _Job_IsJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServer).IsJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/handling.Job/IsJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServer).IsJob(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Job_Handle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServer).Handle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/handling.Job/Handle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServer).Handle(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Job_serviceDesc = grpc.ServiceDesc{
	ServiceName: "handling.Job",
	HandlerType: (*JobServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsJob",
			Handler:    _Job_IsJob_Handler,
		},
		{
			MethodName: "Handle",
			Handler:    _Job_Handle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "handling.proto",
}

func init() { proto.RegisterFile("handling.proto", fileDescriptor_handling_175c078ce2a98572) }

var fileDescriptor_handling_175c078ce2a98572 = []byte{
	// 992 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcd, 0x6e, 0x1b, 0x37,
	0x10, 0xce, 0x5a, 0x5a, 0x79, 0x35, 0xb2, 0x55, 0x83, 0x70, 0xd3, 0x85, 0x11, 0x14, 0xc2, 0x22,
	0x2d, 0x02, 0xa3, 0xf5, 0x41, 0x69, 0x72, 0x28, 0x7a, 0x09, 0x8a, 0x18, 0x55, 0x80, 0xb4, 0x01,
	0x9b, 0xb4, 0xc7, 0x62, 0xa5, 0x1d, 0x7b, 0x89, 0xee, 0x2e, 0x15, 0x92, 0xeb, 0xc6, 0xaf, 0x90,
	0x27, 0xe8, 0x33, 0x15, 0xe8, 0x8b, 0xf4, 0x29, 0x0a, 0x0e, 0xb9, 0x3f, 0x92, 0x17, 0x41, 0x7b,
	0xc8, 0x8d, 0xf3, 0x43, 0x0e, 0xe7, 0x9b, 0x6f, 0x86, 0x84, 0x79, 0x9e, 0x56, 0x59, 0x21, 0xaa,
	0xeb, 0x8b, 0xad, 0x92, 0x46, 0xb2, 0xa8, 0x91, 0x93, 0x3f, 0x0f, 0x60, 0xfe, 0xbd, 0x2c, 0xcb,
	0xb4, 0xca, 0x38, 0xbe, 0xad, 0x51, 0x1b, 0x76, 0x1f, 0x26, 0x5a, 0xd6, 0x6a, 0x83, 0x71, 0xb0,
	0x08, 0x1e, 0x4d, 0xb9, 0x97, 0xd8, 0x43, 0x38, 0xde, 0x48, 0xa5, 0xb0, 0x48, 0x8d, 0x90, 0xd5,
	0x2a, 0x8b, 0x0f, 0xc8, 0xbc, 0xab, 0x64, 0x0b, 0x18, 0xad, 0xa5, 0x89, 0x47, 0x8b, 0xe0, 0xd1,
	0x6c, 0x39, 0xbf, 0x68, 0x03, 0xbf, 0xd1, 0xa8, 0xb8, 0x35, 0xb1, 0x2f, 0x61, 0x92, 0xd6, 0x26,
	0x97, 0x2a, 0x1e, 0x0f, 0x3a, 0x79, 0x2b, 0x7b, 0x00, 0xd3, 0x4d, 0x9e, 0x56, 0x15, 0x16, 0xab,
	0x2c, 0x0e, 0x29, 0x56, 0xa7, 0x60, 0x67, 0x10, 0x69, 0x54, 0x37, 0xa8, 0x56, 0x59, 0x3c, 0x21,
	0x63, 0x2b, 0xb3, 0x73, 0x88, 0x4a, 0xac, 0xec, 0x85, 0x74, 0x7c, 0xb8, 0x18, 0x0d, 0xc4, 0x68,
	0xed, 0x2c, 0x86, 0xc3, 0x8d, 0xac, 0x0c, 0x56, 0x26, 0x8e, 0xe8, 0x98, 0x46, 0x4c, 0xbe, 0x85,
	0xa3, 0x16, 0x99, 0x6d, 0x71, 0xcb, 0xce, 0xe1, 0x50, 0xa1, 0xae, 0x0b, 0xa3, 0xe3, 0x80, 0x0e,
	0x3d, 0xe9, 0x0e, 0xe5, 0x64, 0xe0, 0x8d, 0x43, 0x72, 0x01, 0xf3, 0x95, 0xde, 0xd9, 0xfd, 0x00,
	0xa6, 0xa2, 0xd1, 0x10, 0xb0, 0x11, 0xef, 0x14, 0xc9, 0x5f, 0x01, 0xc0, 0x0b, 0xb9, 0x6e, 0x4a,
	0x30, 0x87, 0x03, 0x91, 0x79, 0xf8, 0x0f, 0x44, 0xc6, 0x18, 0x8c, 0xcd, 0xed, 0x16, 0x3d, 0xe2,
	0xb4, 0xee, 0x5f, 0x7c, 0xb4, 0x73, 0x71, 0xeb, 0x5d, 0x6b, 0x74, 0xf0, 0x4e, 0x39, 0xad, 0xd9,
	0x02, 0x66, 0x19, 0x6a, 0x23, 0x2a, 0xaa, 0x93, 0x87, 0xb3, 0xaf, 0x62, 0x17, 0x10, 0xe9, 0x4d,
	0x8e, 0x59, 0x5d, 0x20, 0x01, 0x3a, 0x5b, 0xb2, 0x2e, 0xbf, 0x9f, 0xbd, 0x85, 0xb7, 0x3e, 0x36,
	0x3e, 0x56, 0xe9, 0xba, 0xc0, 0x2c, 0x3e, 0xa4, 0x74, 0x1a, 0x31, 0x79, 0x0a, 0x11, 0xe5, 0xf2,
	0x7f, 0x41, 0x4b, 0x00, 0x56, 0xba, 0xdd, 0x79, 0x0a, 0xa1, 0xb0, 0x92, 0x07, 0xcb, 0x09, 0xc9,
	0xfb, 0x00, 0xa2, 0xe6, 0x32, 0x96, 0xa9, 0xa5, 0xa8, 0x6a, 0xd3, 0x32, 0xd5, 0x49, 0x16, 0x80,
	0x5c, 0xd6, 0xaa, 0x81, 0xcb, 0xae, 0xd9, 0xe7, 0x00, 0x59, 0x7a, 0xfb, 0xd3, 0xd5, 0x4b, 0x59,
	0x99, 0xdc, 0x23, 0xd6, 0xd3, 0xd8, 0x70, 0x25, 0x99, 0x1c, 0x6a, 0x4e, 0xb0, 0x55, 0x23, 0x9f,
	0x5f, 0x11, 0x7f, 0x6f, 0x38, 0xd8, 0x2a, 0x92, 0x73, 0x18, 0x5b, 0x36, 0x0d, 0x95, 0xab, 0x4a,
	0xcb, 0xb6, 0x5c, 0x76, 0x9d, 0xfc, 0x1d, 0xc0, 0xc4, 0x25, 0xdc, 0xaf, 0x5c, 0xb0, 0x5b, 0xb9,
	0x2f, 0x20, 0xc4, 0x72, 0x8d, 0xae, 0xb5, 0x66, 0xcb, 0x4f, 0x3a, 0xac, 0x9e, 0x5b, 0x35, 0x77,
	0x56, 0x76, 0x02, 0x23, 0x63, 0x34, 0x25, 0x11, 0x71, 0xbb, 0x64, 0x0f, 0x21, 0xbc, 0x12, 0x05,
	0xea, 0x78, 0xbc, 0x4f, 0xf7, 0x4b, 0x51, 0x20, 0x77, 0x46, 0x76, 0x0e, 0x27, 0x42, 0xbf, 0x52,
	0xe2, 0x26, 0x35, 0xf8, 0x12, 0xb5, 0x4e, 0xaf, 0x91, 0x92, 0x8a, 0xf8, 0x1d, 0xbd, 0xc5, 0x4b,
	0x68, 0x8e, 0x99, 0x50, 0xb8, 0x31, 0x44, 0x88, 0x88, 0xf7, 0x34, 0xc9, 0x6f, 0x30, 0xa3, 0x3b,
	0x5d, 0x4a, 0x69, 0x50, 0x11, 0x43, 0xf1, 0x5d, 0x93, 0x10, 0xad, 0x6d, 0x9e, 0x62, 0x23, 0xab,
	0x37, 0xaa, 0xf0, 0x48, 0x34, 0x22, 0x4b, 0xe0, 0x68, 0xab, 0xe4, 0xbb, 0xdb, 0x95, 0x37, 0xbb,
	0x72, 0xec, 0xe8, 0x92, 0x1c, 0x80, 0x02, 0xac, 0x4a, 0x7b, 0x9d, 0x13, 0x18, 0xd5, 0xaa, 0xf0,
	0xc7, 0xdb, 0xa5, 0x1d, 0x00, 0xe4, 0xdf, 0x1d, 0xdf, 0xca, 0xb6, 0x98, 0x7f, 0x88, 0xcc, 0xd7,
	0x39, 0xe4, 0x4e, 0xb0, 0x74, 0xc9, 0x51, 0x5c, 0xe7, 0x86, 0x6a, 0x1c, 0x72, 0x2f, 0x25, 0x05,
	0xcc, 0x29, 0xd2, 0xeb, 0xbc, 0x2e, 0xd7, 0x55, 0x2a, 0x8a, 0x8f, 0x1a, 0xad, 0xc9, 0xeb, 0x17,
	0x91, 0xa1, 0xfc, 0xa8, 0x91, 0x9e, 0xc0, 0x31, 0x45, 0x7a, 0xa5, 0xe4, 0x8d, 0xc8, 0x50, 0x0d,
	0x04, 0x1b, 0x62, 0xea, 0x5b, 0x5f, 0xd9, 0x67, 0x6e, 0x0c, 0xff, 0xa7, 0x4d, 0xfd, 0x5a, 0x8f,
	0x3e, 0x5c, 0xeb, 0xf1, 0x40, 0xad, 0x7f, 0xf4, 0x98, 0x5c, 0x0a, 0x2c, 0xba, 0xf6, 0x09, 0x7a,
	0xe7, 0x9f, 0x42, 0x78, 0x93, 0x16, 0x75, 0x13, 0xd4, 0x09, 0x36, 0x73, 0x51, 0x15, 0xa2, 0x42,
	0xdf, 0x0b, 0x5e, 0x4a, 0xfe, 0x19, 0x41, 0xf8, 0xbc, 0x69, 0x95, 0xbb, 0xb7, 0xbf, 0x33, 0x4b,
	0x4f, 0x21, 0x34, 0xc2, 0x14, 0xe8, 0xef, 0xee, 0x04, 0x3f, 0x33, 0x37, 0x4a, 0x6c, 0x69, 0x66,
	0x8e, 0xdb, 0x99, 0xd9, 0xa8, 0xec, 0x78, 0x30, 0xa2, 0x44, 0x6d, 0xd2, 0x72, 0xdb, 0x8c, 0x87,
	0x56, 0x61, 0x4f, 0xdd, 0xc8, 0x42, 0x2a, 0xea, 0x9e, 0x90, 0x3b, 0x81, 0x7d, 0x0d, 0x93, 0x2b,
	0xea, 0x19, 0x1a, 0x9b, 0xb3, 0xe5, 0xa7, 0x7b, 0x4d, 0xee, 0x1a, 0x8a, 0x7b, 0x27, 0x76, 0x0e,
	0xa1, 0xb0, 0x1d, 0x40, 0xaf, 0xd3, 0x6c, 0x79, 0xba, 0xe7, 0x4d, 0xdd, 0xc1, 0x9d, 0x0b, 0x7b,
	0x0a, 0x53, 0xd3, 0x70, 0x38, 0x9e, 0x92, 0x7f, 0xbc, 0xe7, 0xdf, 0x72, 0x9c, 0x77, 0xae, 0x36,
	0x86, 0x25, 0x88, 0x8c, 0x61, 0x30, 0x06, 0x31, 0x95, 0x3b, 0x17, 0xf6, 0x98, 0xe8, 0x49, 0x7c,
	0x8a, 0x67, 0xe4, 0xfe, 0xd9, 0x9e, 0x7b, 0x43, 0x37, 0xde, 0x3a, 0xda, 0x9c, 0xfd, 0x93, 0x7f,
	0x34, 0x98, 0xb3, 0xa3, 0x5a, 0xfb, 0xf2, 0x7f, 0x05, 0x93, 0x2b, 0xcb, 0x04, 0x1d, 0x1f, 0xd3,
	0x38, 0xdb, 0xbf, 0x10, 0xd1, 0x84, 0x7b, 0x9f, 0x84, 0xc3, 0xd8, 0x0e, 0xb9, 0x41, 0xda, 0x2c,
	0x60, 0xe6, 0x67, 0xeb, 0xeb, 0xae, 0xe6, 0x7d, 0x95, 0x2d, 0xd2, 0xfa, 0xd6, 0xa0, 0x9b, 0xa6,
	0x47, 0xdc, 0x09, 0xcb, 0xf7, 0x01, 0x1c, 0xfa, 0xb7, 0x99, 0x3d, 0x83, 0x69, 0xfb, 0x96, 0xb3,
	0x1e, 0x9e, 0xbb, 0xdf, 0xa6, 0xb3, 0x9e, 0x65, 0xf7, 0xe9, 0x4f, 0xee, 0xb1, 0xef, 0x60, 0xf2,
	0x83, 0x35, 0xe2, 0x07, 0xf6, 0xdf, 0x1f, 0xb0, 0xd0, 0xee, 0xa5, 0x82, 0xd1, 0x0b, 0xb9, 0x66,
	0x4f, 0x20, 0xa4, 0xe7, 0x91, 0xf5, 0xe0, 0xe8, 0xfe, 0x0c, 0x67, 0xa7, 0xfd, 0xf8, 0xcd, 0x2b,
	0x9a, 0xdc, 0x63, 0xdf, 0xb4, 0xb1, 0x87, 0xf7, 0xb1, 0x3d, 0x2d, 0xed, 0x5a, 0x4f, 0xe8, 0xa3,
	0xf8, 0xf8, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6d, 0xde, 0x06, 0x55, 0x3a, 0x0a, 0x00, 0x00,
}
