syntax = "proto3";

package processingpb;

service Processing {
    rpc SendMessageRequest(MessageRequest) returns (SendMessageRequestReply) {}
    rpc GetMessageReply(MessageReplyRequest) returns (MessageReply) {}
    rpc ProcessingRequestIntentStatistics(ProcessingRequestIntentStatisticsRequest) returns (ProcessingRequestIntentStatisticsReply) {}
}

message MessageReplyReceived {
    string Id = 1;
}

message MessageRequest {
    string id = 1;
    string source = 2;
    User bot = 3;
    User author = 4;
    string channelId = 5;
    string serverId = 6;
    repeated Server servers = 7;
    repeated User mentions = 8;
    string content = 9;
}

message User {
    string id = 1;
    string name = 2;
    string discriminator = 3;
}

message Server {
    string id = 1;
    string name = 2;
}

message Response {
    repeated string messages = 1;
}

message SendMessageRequestReply {
    string id = 1;
}

message MessageReplyRequest {
    string id = 1;
}

message MessageReply {
	string id = 1;
    string processingRequestId = 2;
    string channelId = 3;
    string userId = 4;
    string content = 5;
    int64 created = 6;
}

message ProcessingRequest {
	string id = 1;
    string type = 2;
    string intentId = 3;
    string source = 4;
    string channelId = 5;
    string serverId = 6;
    string botId = 7;
    string userId = 8;
    int64 created = 9;
}

message ProcessingEvent {
	string id = 1;
    string processingRequestId = 2;
    string description = 3;
    string type = 4;
    int64 created = 5;
}

message ProcessingRequestIntentStatisticsRequest {
    string serverId = 1;
    string intentId = 2;
    string userId = 3;
    string type = 4;
    int64 createdGreaterThanOrEqualTo = 5;
    int64 createdLessThanOrEqualTo = 6;
    int32 userLimit = 7;
}

message ProcessingRequestIntentStatisticsReply {
    string intentId = 1;
    repeated UserStatistic userStatistics = 2;
}

message UserStatistic {
    string userId = 1;
    string count = 2;
}