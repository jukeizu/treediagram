// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: processing.proto

package processingpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MessageReplyReceived struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *MessageReplyReceived) Reset() {
	*x = MessageReplyReceived{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReplyReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReplyReceived) ProtoMessage() {}

func (x *MessageReplyReceived) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReplyReceived.ProtoReflect.Descriptor instead.
func (*MessageReplyReceived) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{0}
}

func (x *MessageReplyReceived) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Source    string    `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Bot       *User     `protobuf:"bytes,3,opt,name=bot,proto3" json:"bot,omitempty"`
	Author    *User     `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	ChannelId string    `protobuf:"bytes,5,opt,name=channelId,proto3" json:"channelId,omitempty"`
	ServerId  string    `protobuf:"bytes,6,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Servers   []*Server `protobuf:"bytes,7,rep,name=servers,proto3" json:"servers,omitempty"`
	Mentions  []*User   `protobuf:"bytes,8,rep,name=mentions,proto3" json:"mentions,omitempty"`
	Content   string    `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *MessageRequest) Reset() {
	*x = MessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRequest) ProtoMessage() {}

func (x *MessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRequest.ProtoReflect.Descriptor instead.
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{1}
}

func (x *MessageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *MessageRequest) GetBot() *User {
	if x != nil {
		return x.Bot
	}
	return nil
}

func (x *MessageRequest) GetAuthor() *User {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *MessageRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MessageRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *MessageRequest) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *MessageRequest) GetMentions() []*User {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (x *MessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Discriminator string `protobuf:"bytes,3,opt,name=discriminator,proto3" json:"discriminator,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetDiscriminator() string {
	if x != nil {
		return x.Discriminator
	}
	return ""
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OwnerId         string `protobuf:"bytes,3,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	Description     string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	UserCount       int32  `protobuf:"varint,5,opt,name=userCount,proto3" json:"userCount,omitempty"`
	IconUrl         string `protobuf:"bytes,6,opt,name=iconUrl,proto3" json:"iconUrl,omitempty"`
	SystemChannelId string `protobuf:"bytes,7,opt,name=systemChannelId,proto3" json:"systemChannelId,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{3}
}

func (x *Server) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Server) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Server) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Server) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Server) GetUserCount() int32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *Server) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Server) GetSystemChannelId() string {
	if x != nil {
		return x.SystemChannelId
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []string `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{4}
}

func (x *Response) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SendMessageRequestReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SendMessageRequestReply) Reset() {
	*x = SendMessageRequestReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequestReply) ProtoMessage() {}

func (x *SendMessageRequestReply) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequestReply.ProtoReflect.Descriptor instead.
func (*SendMessageRequestReply) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{5}
}

func (x *SendMessageRequestReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MessageReplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MessageReplyRequest) Reset() {
	*x = MessageReplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReplyRequest) ProtoMessage() {}

func (x *MessageReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReplyRequest.ProtoReflect.Descriptor instead.
func (*MessageReplyRequest) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{6}
}

func (x *MessageReplyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProcessingRequestId string `protobuf:"bytes,2,opt,name=processingRequestId,proto3" json:"processingRequestId,omitempty"`
	ChannelId           string `protobuf:"bytes,3,opt,name=channelId,proto3" json:"channelId,omitempty"`
	UserId              string `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	Content             string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Created             int64  `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *MessageReply) Reset() {
	*x = MessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReply) ProtoMessage() {}

func (x *MessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReply.ProtoReflect.Descriptor instead.
func (*MessageReply) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{7}
}

func (x *MessageReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageReply) GetProcessingRequestId() string {
	if x != nil {
		return x.ProcessingRequestId
	}
	return ""
}

func (x *MessageReply) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MessageReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MessageReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MessageReply) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type ProcessingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	IntentId  string `protobuf:"bytes,3,opt,name=intentId,proto3" json:"intentId,omitempty"`
	Source    string `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	ChannelId string `protobuf:"bytes,5,opt,name=channelId,proto3" json:"channelId,omitempty"`
	ServerId  string `protobuf:"bytes,6,opt,name=serverId,proto3" json:"serverId,omitempty"`
	BotId     string `protobuf:"bytes,7,opt,name=botId,proto3" json:"botId,omitempty"`
	UserId    string `protobuf:"bytes,8,opt,name=userId,proto3" json:"userId,omitempty"`
	Created   int64  `protobuf:"varint,9,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *ProcessingRequest) Reset() {
	*x = ProcessingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingRequest) ProtoMessage() {}

func (x *ProcessingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingRequest.ProtoReflect.Descriptor instead.
func (*ProcessingRequest) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcessingRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProcessingRequest) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *ProcessingRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ProcessingRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ProcessingRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ProcessingRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *ProcessingRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ProcessingRequest) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type ProcessingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProcessingRequestId string `protobuf:"bytes,2,opt,name=processingRequestId,proto3" json:"processingRequestId,omitempty"`
	Description         string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type                string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Created             int64  `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *ProcessingEvent) Reset() {
	*x = ProcessingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingEvent) ProtoMessage() {}

func (x *ProcessingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingEvent.ProtoReflect.Descriptor instead.
func (*ProcessingEvent) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{9}
}

func (x *ProcessingEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcessingEvent) GetProcessingRequestId() string {
	if x != nil {
		return x.ProcessingRequestId
	}
	return ""
}

func (x *ProcessingEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProcessingEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProcessingEvent) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

type ProcessingRequestIntentStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerId                    string `protobuf:"bytes,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	IntentId                    string `protobuf:"bytes,2,opt,name=intentId,proto3" json:"intentId,omitempty"`
	UserId                      string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Type                        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	CreatedGreaterThanOrEqualTo int64  `protobuf:"varint,5,opt,name=createdGreaterThanOrEqualTo,proto3" json:"createdGreaterThanOrEqualTo,omitempty"`
	CreatedLessThanOrEqualTo    int64  `protobuf:"varint,6,opt,name=createdLessThanOrEqualTo,proto3" json:"createdLessThanOrEqualTo,omitempty"`
	UserLimit                   int32  `protobuf:"varint,7,opt,name=userLimit,proto3" json:"userLimit,omitempty"`
}

func (x *ProcessingRequestIntentStatisticsRequest) Reset() {
	*x = ProcessingRequestIntentStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessingRequestIntentStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingRequestIntentStatisticsRequest) ProtoMessage() {}

func (x *ProcessingRequestIntentStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingRequestIntentStatisticsRequest.ProtoReflect.Descriptor instead.
func (*ProcessingRequestIntentStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{10}
}

func (x *ProcessingRequestIntentStatisticsRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ProcessingRequestIntentStatisticsRequest) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *ProcessingRequestIntentStatisticsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ProcessingRequestIntentStatisticsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProcessingRequestIntentStatisticsRequest) GetCreatedGreaterThanOrEqualTo() int64 {
	if x != nil {
		return x.CreatedGreaterThanOrEqualTo
	}
	return 0
}

func (x *ProcessingRequestIntentStatisticsRequest) GetCreatedLessThanOrEqualTo() int64 {
	if x != nil {
		return x.CreatedLessThanOrEqualTo
	}
	return 0
}

func (x *ProcessingRequestIntentStatisticsRequest) GetUserLimit() int32 {
	if x != nil {
		return x.UserLimit
	}
	return 0
}

type ProcessingRequestIntentStatisticsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntentId       string           `protobuf:"bytes,1,opt,name=intentId,proto3" json:"intentId,omitempty"`
	UserStatistics []*UserStatistic `protobuf:"bytes,2,rep,name=userStatistics,proto3" json:"userStatistics,omitempty"`
}

func (x *ProcessingRequestIntentStatisticsReply) Reset() {
	*x = ProcessingRequestIntentStatisticsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessingRequestIntentStatisticsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingRequestIntentStatisticsReply) ProtoMessage() {}

func (x *ProcessingRequestIntentStatisticsReply) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingRequestIntentStatisticsReply.ProtoReflect.Descriptor instead.
func (*ProcessingRequestIntentStatisticsReply) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{11}
}

func (x *ProcessingRequestIntentStatisticsReply) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *ProcessingRequestIntentStatisticsReply) GetUserStatistics() []*UserStatistic {
	if x != nil {
		return x.UserStatistics
	}
	return nil
}

type UserStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Count  int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *UserStatistic) Reset() {
	*x = UserStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatistic) ProtoMessage() {}

func (x *UserStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatistic.ProtoReflect.Descriptor instead.
func (*UserStatistic) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{12}
}

func (x *UserStatistic) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserStatistic) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SendProcessingEventReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendProcessingEventReply) Reset() {
	*x = SendProcessingEventReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendProcessingEventReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendProcessingEventReply) ProtoMessage() {}

func (x *SendProcessingEventReply) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendProcessingEventReply.ProtoReflect.Descriptor instead.
func (*SendProcessingEventReply) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{13}
}

type Reaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string          `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	MessageRequest *MessageRequest `protobuf:"bytes,2,opt,name=messageRequest,proto3" json:"messageRequest,omitempty"`
	Emoji          *Emoji          `protobuf:"bytes,3,opt,name=emoji,proto3" json:"emoji,omitempty"`
	ChannelId      string          `protobuf:"bytes,4,opt,name=channelId,proto3" json:"channelId,omitempty"`
	ServerId       string          `protobuf:"bytes,5,opt,name=serverId,proto3" json:"serverId,omitempty"`
}

func (x *Reaction) Reset() {
	*x = Reaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reaction) ProtoMessage() {}

func (x *Reaction) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reaction.ProtoReflect.Descriptor instead.
func (*Reaction) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{14}
}

func (x *Reaction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Reaction) GetMessageRequest() *MessageRequest {
	if x != nil {
		return x.MessageRequest
	}
	return nil
}

func (x *Reaction) GetEmoji() *Emoji {
	if x != nil {
		return x.Emoji
	}
	return nil
}

func (x *Reaction) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *Reaction) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type Emoji struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Roles         []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	Managed       bool     `protobuf:"varint,4,opt,name=managed,proto3" json:"managed,omitempty"`
	RequireColons bool     `protobuf:"varint,5,opt,name=requireColons,proto3" json:"requireColons,omitempty"`
	Animated      bool     `protobuf:"varint,6,opt,name=animated,proto3" json:"animated,omitempty"`
	Available     bool     `protobuf:"varint,7,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *Emoji) Reset() {
	*x = Emoji{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Emoji) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emoji) ProtoMessage() {}

func (x *Emoji) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emoji.ProtoReflect.Descriptor instead.
func (*Emoji) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{15}
}

func (x *Emoji) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Emoji) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Emoji) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Emoji) GetManaged() bool {
	if x != nil {
		return x.Managed
	}
	return false
}

func (x *Emoji) GetRequireColons() bool {
	if x != nil {
		return x.RequireColons
	}
	return false
}

func (x *Emoji) GetAnimated() bool {
	if x != nil {
		return x.Animated
	}
	return false
}

func (x *Emoji) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type SendReactionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendReactionReply) Reset() {
	*x = SendReactionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processing_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReactionReply) ProtoMessage() {}

func (x *SendReactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_processing_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReactionReply.ProtoReflect.Descriptor instead.
func (*SendReactionReply) Descriptor() ([]byte, []int) {
	return file_processing_proto_rawDescGZIP(), []int{16}
}

var File_processing_proto protoreflect.FileDescriptor

var file_processing_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62,
	0x22, 0x26, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0xbe, 0x02, 0x0a, 0x0e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x62, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x03, 0x62, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12,
	0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x72, 0x69, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69,
	0x73, 0x63, 0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xca, 0x01, 0x0a, 0x06,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x29, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22,
	0xed, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22,
	0xa3, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0xaa, 0x02, 0x0a, 0x28, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x1b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x4f, 0x72, 0x45, 0x71,
	0x75, 0x61, 0x6c, 0x54, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x4f,
	0x72, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x54, 0x6f, 0x12, 0x3a, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x4f, 0x72, 0x45, 0x71, 0x75,
	0x61, 0x6c, 0x54, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x4f, 0x72, 0x45, 0x71, 0x75,
	0x61, 0x6c, 0x54, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x26, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x3d,
	0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1a, 0x0a,
	0x18, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xcd, 0x01, 0x0a, 0x08, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x44,
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x05, 0x45, 0x6d,
	0x6f, 0x6a, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xfe, 0x03, 0x0a,
	0x0a, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x5b, 0x0a, 0x12, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x2e, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0c,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x26, 0x2e,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x36, 0x2e,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x10, 0x5a,
	0x0e, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_processing_proto_rawDescOnce sync.Once
	file_processing_proto_rawDescData = file_processing_proto_rawDesc
)

func file_processing_proto_rawDescGZIP() []byte {
	file_processing_proto_rawDescOnce.Do(func() {
		file_processing_proto_rawDescData = protoimpl.X.CompressGZIP(file_processing_proto_rawDescData)
	})
	return file_processing_proto_rawDescData
}

var file_processing_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_processing_proto_goTypes = []interface{}{
	(*MessageReplyReceived)(nil),                     // 0: processingpb.MessageReplyReceived
	(*MessageRequest)(nil),                           // 1: processingpb.MessageRequest
	(*User)(nil),                                     // 2: processingpb.User
	(*Server)(nil),                                   // 3: processingpb.Server
	(*Response)(nil),                                 // 4: processingpb.Response
	(*SendMessageRequestReply)(nil),                  // 5: processingpb.SendMessageRequestReply
	(*MessageReplyRequest)(nil),                      // 6: processingpb.MessageReplyRequest
	(*MessageReply)(nil),                             // 7: processingpb.MessageReply
	(*ProcessingRequest)(nil),                        // 8: processingpb.ProcessingRequest
	(*ProcessingEvent)(nil),                          // 9: processingpb.ProcessingEvent
	(*ProcessingRequestIntentStatisticsRequest)(nil), // 10: processingpb.ProcessingRequestIntentStatisticsRequest
	(*ProcessingRequestIntentStatisticsReply)(nil),   // 11: processingpb.ProcessingRequestIntentStatisticsReply
	(*UserStatistic)(nil),                            // 12: processingpb.UserStatistic
	(*SendProcessingEventReply)(nil),                 // 13: processingpb.SendProcessingEventReply
	(*Reaction)(nil),                                 // 14: processingpb.Reaction
	(*Emoji)(nil),                                    // 15: processingpb.Emoji
	(*SendReactionReply)(nil),                        // 16: processingpb.SendReactionReply
}
var file_processing_proto_depIdxs = []int32{
	2,  // 0: processingpb.MessageRequest.bot:type_name -> processingpb.User
	2,  // 1: processingpb.MessageRequest.author:type_name -> processingpb.User
	3,  // 2: processingpb.MessageRequest.servers:type_name -> processingpb.Server
	2,  // 3: processingpb.MessageRequest.mentions:type_name -> processingpb.User
	12, // 4: processingpb.ProcessingRequestIntentStatisticsReply.userStatistics:type_name -> processingpb.UserStatistic
	1,  // 5: processingpb.Reaction.messageRequest:type_name -> processingpb.MessageRequest
	15, // 6: processingpb.Reaction.emoji:type_name -> processingpb.Emoji
	1,  // 7: processingpb.Processing.SendMessageRequest:input_type -> processingpb.MessageRequest
	6,  // 8: processingpb.Processing.GetMessageReply:input_type -> processingpb.MessageReplyRequest
	14, // 9: processingpb.Processing.SendReaction:input_type -> processingpb.Reaction
	9,  // 10: processingpb.Processing.SendProcessingEvent:input_type -> processingpb.ProcessingEvent
	10, // 11: processingpb.Processing.ProcessingRequestIntentStatistics:input_type -> processingpb.ProcessingRequestIntentStatisticsRequest
	5,  // 12: processingpb.Processing.SendMessageRequest:output_type -> processingpb.SendMessageRequestReply
	7,  // 13: processingpb.Processing.GetMessageReply:output_type -> processingpb.MessageReply
	16, // 14: processingpb.Processing.SendReaction:output_type -> processingpb.SendReactionReply
	13, // 15: processingpb.Processing.SendProcessingEvent:output_type -> processingpb.SendProcessingEventReply
	11, // 16: processingpb.Processing.ProcessingRequestIntentStatistics:output_type -> processingpb.ProcessingRequestIntentStatisticsReply
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_processing_proto_init() }
func file_processing_proto_init() {
	if File_processing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_processing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReplyReceived); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequestReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessingRequestIntentStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessingRequestIntentStatisticsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendProcessingEventReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Emoji); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processing_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReactionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_processing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_processing_proto_goTypes,
		DependencyIndexes: file_processing_proto_depIdxs,
		MessageInfos:      file_processing_proto_msgTypes,
	}.Build()
	File_processing_proto = out.File
	file_processing_proto_rawDesc = nil
	file_processing_proto_goTypes = nil
	file_processing_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProcessingClient is the client API for Processing service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProcessingClient interface {
	SendMessageRequest(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*SendMessageRequestReply, error)
	GetMessageReply(ctx context.Context, in *MessageReplyRequest, opts ...grpc.CallOption) (*MessageReply, error)
	SendReaction(ctx context.Context, in *Reaction, opts ...grpc.CallOption) (*SendReactionReply, error)
	SendProcessingEvent(ctx context.Context, in *ProcessingEvent, opts ...grpc.CallOption) (*SendProcessingEventReply, error)
	ProcessingRequestIntentStatistics(ctx context.Context, in *ProcessingRequestIntentStatisticsRequest, opts ...grpc.CallOption) (*ProcessingRequestIntentStatisticsReply, error)
}

type processingClient struct {
	cc grpc.ClientConnInterface
}

func NewProcessingClient(cc grpc.ClientConnInterface) ProcessingClient {
	return &processingClient{cc}
}

func (c *processingClient) SendMessageRequest(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*SendMessageRequestReply, error) {
	out := new(SendMessageRequestReply)
	err := c.cc.Invoke(ctx, "/processingpb.Processing/SendMessageRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *processingClient) GetMessageReply(ctx context.Context, in *MessageReplyRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := c.cc.Invoke(ctx, "/processingpb.Processing/GetMessageReply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *processingClient) SendReaction(ctx context.Context, in *Reaction, opts ...grpc.CallOption) (*SendReactionReply, error) {
	out := new(SendReactionReply)
	err := c.cc.Invoke(ctx, "/processingpb.Processing/SendReaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *processingClient) SendProcessingEvent(ctx context.Context, in *ProcessingEvent, opts ...grpc.CallOption) (*SendProcessingEventReply, error) {
	out := new(SendProcessingEventReply)
	err := c.cc.Invoke(ctx, "/processingpb.Processing/SendProcessingEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *processingClient) ProcessingRequestIntentStatistics(ctx context.Context, in *ProcessingRequestIntentStatisticsRequest, opts ...grpc.CallOption) (*ProcessingRequestIntentStatisticsReply, error) {
	out := new(ProcessingRequestIntentStatisticsReply)
	err := c.cc.Invoke(ctx, "/processingpb.Processing/ProcessingRequestIntentStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProcessingServer is the server API for Processing service.
type ProcessingServer interface {
	SendMessageRequest(context.Context, *MessageRequest) (*SendMessageRequestReply, error)
	GetMessageReply(context.Context, *MessageReplyRequest) (*MessageReply, error)
	SendReaction(context.Context, *Reaction) (*SendReactionReply, error)
	SendProcessingEvent(context.Context, *ProcessingEvent) (*SendProcessingEventReply, error)
	ProcessingRequestIntentStatistics(context.Context, *ProcessingRequestIntentStatisticsRequest) (*ProcessingRequestIntentStatisticsReply, error)
}

// UnimplementedProcessingServer can be embedded to have forward compatible implementations.
type UnimplementedProcessingServer struct {
}

func (*UnimplementedProcessingServer) SendMessageRequest(context.Context, *MessageRequest) (*SendMessageRequestReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessageRequest not implemented")
}
func (*UnimplementedProcessingServer) GetMessageReply(context.Context, *MessageReplyRequest) (*MessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessageReply not implemented")
}
func (*UnimplementedProcessingServer) SendReaction(context.Context, *Reaction) (*SendReactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendReaction not implemented")
}
func (*UnimplementedProcessingServer) SendProcessingEvent(context.Context, *ProcessingEvent) (*SendProcessingEventReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendProcessingEvent not implemented")
}
func (*UnimplementedProcessingServer) ProcessingRequestIntentStatistics(context.Context, *ProcessingRequestIntentStatisticsRequest) (*ProcessingRequestIntentStatisticsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessingRequestIntentStatistics not implemented")
}

func RegisterProcessingServer(s *grpc.Server, srv ProcessingServer) {
	s.RegisterService(&_Processing_serviceDesc, srv)
}

func _Processing_SendMessageRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessingServer).SendMessageRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/processingpb.Processing/SendMessageRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessingServer).SendMessageRequest(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Processing_GetMessageReply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageReplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessingServer).GetMessageReply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/processingpb.Processing/GetMessageReply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessingServer).GetMessageReply(ctx, req.(*MessageReplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Processing_SendReaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Reaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessingServer).SendReaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/processingpb.Processing/SendReaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessingServer).SendReaction(ctx, req.(*Reaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Processing_SendProcessingEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessingEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessingServer).SendProcessingEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/processingpb.Processing/SendProcessingEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessingServer).SendProcessingEvent(ctx, req.(*ProcessingEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Processing_ProcessingRequestIntentStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessingRequestIntentStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessingServer).ProcessingRequestIntentStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/processingpb.Processing/ProcessingRequestIntentStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessingServer).ProcessingRequestIntentStatistics(ctx, req.(*ProcessingRequestIntentStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Processing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "processingpb.Processing",
	HandlerType: (*ProcessingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessageRequest",
			Handler:    _Processing_SendMessageRequest_Handler,
		},
		{
			MethodName: "GetMessageReply",
			Handler:    _Processing_GetMessageReply_Handler,
		},
		{
			MethodName: "SendReaction",
			Handler:    _Processing_SendReaction_Handler,
		},
		{
			MethodName: "SendProcessingEvent",
			Handler:    _Processing_SendProcessingEvent_Handler,
		},
		{
			MethodName: "ProcessingRequestIntentStatistics",
			Handler:    _Processing_ProcessingRequestIntentStatistics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "processing.proto",
}
