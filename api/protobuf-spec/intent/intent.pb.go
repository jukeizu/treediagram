// Code generated by protoc-gen-go. DO NOT EDIT.
// source: intent.proto

package intent

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Intent struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerId             string   `protobuf:"bytes,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Regex                string   `protobuf:"bytes,4,opt,name=regex,proto3" json:"regex,omitempty"`
	Mention              bool     `protobuf:"varint,5,opt,name=mention,proto3" json:"mention,omitempty"`
	Response             string   `protobuf:"bytes,6,opt,name=response,proto3" json:"response,omitempty"`
	Endpoint             string   `protobuf:"bytes,7,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Help                 string   `protobuf:"bytes,8,opt,name=help,proto3" json:"help,omitempty"`
	Enabled              bool     `protobuf:"varint,9,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Intent) Reset()         { *m = Intent{} }
func (m *Intent) String() string { return proto.CompactTextString(m) }
func (*Intent) ProtoMessage()    {}
func (*Intent) Descriptor() ([]byte, []int) {
	return fileDescriptor_intent_6a6870634aea5606, []int{0}
}
func (m *Intent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Intent.Unmarshal(m, b)
}
func (m *Intent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Intent.Marshal(b, m, deterministic)
}
func (dst *Intent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Intent.Merge(dst, src)
}
func (m *Intent) XXX_Size() int {
	return xxx_messageInfo_Intent.Size(m)
}
func (m *Intent) XXX_DiscardUnknown() {
	xxx_messageInfo_Intent.DiscardUnknown(m)
}

var xxx_messageInfo_Intent proto.InternalMessageInfo

func (m *Intent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Intent) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *Intent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Intent) GetRegex() string {
	if m != nil {
		return m.Regex
	}
	return ""
}

func (m *Intent) GetMention() bool {
	if m != nil {
		return m.Mention
	}
	return false
}

func (m *Intent) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func (m *Intent) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Intent) GetHelp() string {
	if m != nil {
		return m.Help
	}
	return ""
}

func (m *Intent) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

type QueryIntentsRequest struct {
	ServerId             string   `protobuf:"bytes,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryIntentsRequest) Reset()         { *m = QueryIntentsRequest{} }
func (m *QueryIntentsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryIntentsRequest) ProtoMessage()    {}
func (*QueryIntentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_intent_6a6870634aea5606, []int{1}
}
func (m *QueryIntentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryIntentsRequest.Unmarshal(m, b)
}
func (m *QueryIntentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryIntentsRequest.Marshal(b, m, deterministic)
}
func (dst *QueryIntentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryIntentsRequest.Merge(dst, src)
}
func (m *QueryIntentsRequest) XXX_Size() int {
	return xxx_messageInfo_QueryIntentsRequest.Size(m)
}
func (m *QueryIntentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryIntentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryIntentsRequest proto.InternalMessageInfo

func (m *QueryIntentsRequest) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

type AddIntentRequest struct {
	Intent               *Intent  `protobuf:"bytes,1,opt,name=intent,proto3" json:"intent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddIntentRequest) Reset()         { *m = AddIntentRequest{} }
func (m *AddIntentRequest) String() string { return proto.CompactTextString(m) }
func (*AddIntentRequest) ProtoMessage()    {}
func (*AddIntentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_intent_6a6870634aea5606, []int{2}
}
func (m *AddIntentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddIntentRequest.Unmarshal(m, b)
}
func (m *AddIntentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddIntentRequest.Marshal(b, m, deterministic)
}
func (dst *AddIntentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddIntentRequest.Merge(dst, src)
}
func (m *AddIntentRequest) XXX_Size() int {
	return xxx_messageInfo_AddIntentRequest.Size(m)
}
func (m *AddIntentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddIntentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddIntentRequest proto.InternalMessageInfo

func (m *AddIntentRequest) GetIntent() *Intent {
	if m != nil {
		return m.Intent
	}
	return nil
}

type AddIntentReply struct {
	Intent               *Intent  `protobuf:"bytes,1,opt,name=intent,proto3" json:"intent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddIntentReply) Reset()         { *m = AddIntentReply{} }
func (m *AddIntentReply) String() string { return proto.CompactTextString(m) }
func (*AddIntentReply) ProtoMessage()    {}
func (*AddIntentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_intent_6a6870634aea5606, []int{3}
}
func (m *AddIntentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddIntentReply.Unmarshal(m, b)
}
func (m *AddIntentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddIntentReply.Marshal(b, m, deterministic)
}
func (dst *AddIntentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddIntentReply.Merge(dst, src)
}
func (m *AddIntentReply) XXX_Size() int {
	return xxx_messageInfo_AddIntentReply.Size(m)
}
func (m *AddIntentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddIntentReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddIntentReply proto.InternalMessageInfo

func (m *AddIntentReply) GetIntent() *Intent {
	if m != nil {
		return m.Intent
	}
	return nil
}

type DisableIntentRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableIntentRequest) Reset()         { *m = DisableIntentRequest{} }
func (m *DisableIntentRequest) String() string { return proto.CompactTextString(m) }
func (*DisableIntentRequest) ProtoMessage()    {}
func (*DisableIntentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_intent_6a6870634aea5606, []int{4}
}
func (m *DisableIntentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableIntentRequest.Unmarshal(m, b)
}
func (m *DisableIntentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableIntentRequest.Marshal(b, m, deterministic)
}
func (dst *DisableIntentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableIntentRequest.Merge(dst, src)
}
func (m *DisableIntentRequest) XXX_Size() int {
	return xxx_messageInfo_DisableIntentRequest.Size(m)
}
func (m *DisableIntentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableIntentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisableIntentRequest proto.InternalMessageInfo

func (m *DisableIntentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DisableIntentReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableIntentReply) Reset()         { *m = DisableIntentReply{} }
func (m *DisableIntentReply) String() string { return proto.CompactTextString(m) }
func (*DisableIntentReply) ProtoMessage()    {}
func (*DisableIntentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_intent_6a6870634aea5606, []int{5}
}
func (m *DisableIntentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableIntentReply.Unmarshal(m, b)
}
func (m *DisableIntentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableIntentReply.Marshal(b, m, deterministic)
}
func (dst *DisableIntentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableIntentReply.Merge(dst, src)
}
func (m *DisableIntentReply) XXX_Size() int {
	return xxx_messageInfo_DisableIntentReply.Size(m)
}
func (m *DisableIntentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableIntentReply.DiscardUnknown(m)
}

var xxx_messageInfo_DisableIntentReply proto.InternalMessageInfo

func (m *DisableIntentReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Intent)(nil), "intent.Intent")
	proto.RegisterType((*QueryIntentsRequest)(nil), "intent.QueryIntentsRequest")
	proto.RegisterType((*AddIntentRequest)(nil), "intent.AddIntentRequest")
	proto.RegisterType((*AddIntentReply)(nil), "intent.AddIntentReply")
	proto.RegisterType((*DisableIntentRequest)(nil), "intent.DisableIntentRequest")
	proto.RegisterType((*DisableIntentReply)(nil), "intent.DisableIntentReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IntentRegistryClient is the client API for IntentRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IntentRegistryClient interface {
	AddIntent(ctx context.Context, in *AddIntentRequest, opts ...grpc.CallOption) (*AddIntentReply, error)
	DisableIntent(ctx context.Context, in *DisableIntentRequest, opts ...grpc.CallOption) (*DisableIntentReply, error)
	QueryIntents(ctx context.Context, in *QueryIntentsRequest, opts ...grpc.CallOption) (IntentRegistry_QueryIntentsClient, error)
}

type intentRegistryClient struct {
	cc *grpc.ClientConn
}

func NewIntentRegistryClient(cc *grpc.ClientConn) IntentRegistryClient {
	return &intentRegistryClient{cc}
}

func (c *intentRegistryClient) AddIntent(ctx context.Context, in *AddIntentRequest, opts ...grpc.CallOption) (*AddIntentReply, error) {
	out := new(AddIntentReply)
	err := c.cc.Invoke(ctx, "/intent.IntentRegistry/AddIntent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intentRegistryClient) DisableIntent(ctx context.Context, in *DisableIntentRequest, opts ...grpc.CallOption) (*DisableIntentReply, error) {
	out := new(DisableIntentReply)
	err := c.cc.Invoke(ctx, "/intent.IntentRegistry/DisableIntent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *intentRegistryClient) QueryIntents(ctx context.Context, in *QueryIntentsRequest, opts ...grpc.CallOption) (IntentRegistry_QueryIntentsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_IntentRegistry_serviceDesc.Streams[0], "/intent.IntentRegistry/QueryIntents", opts...)
	if err != nil {
		return nil, err
	}
	x := &intentRegistryQueryIntentsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type IntentRegistry_QueryIntentsClient interface {
	Recv() (*Intent, error)
	grpc.ClientStream
}

type intentRegistryQueryIntentsClient struct {
	grpc.ClientStream
}

func (x *intentRegistryQueryIntentsClient) Recv() (*Intent, error) {
	m := new(Intent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// IntentRegistryServer is the server API for IntentRegistry service.
type IntentRegistryServer interface {
	AddIntent(context.Context, *AddIntentRequest) (*AddIntentReply, error)
	DisableIntent(context.Context, *DisableIntentRequest) (*DisableIntentReply, error)
	QueryIntents(*QueryIntentsRequest, IntentRegistry_QueryIntentsServer) error
}

func RegisterIntentRegistryServer(s *grpc.Server, srv IntentRegistryServer) {
	s.RegisterService(&_IntentRegistry_serviceDesc, srv)
}

func _IntentRegistry_AddIntent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddIntentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntentRegistryServer).AddIntent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intent.IntentRegistry/AddIntent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntentRegistryServer).AddIntent(ctx, req.(*AddIntentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntentRegistry_DisableIntent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableIntentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IntentRegistryServer).DisableIntent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intent.IntentRegistry/DisableIntent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IntentRegistryServer).DisableIntent(ctx, req.(*DisableIntentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IntentRegistry_QueryIntents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(QueryIntentsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IntentRegistryServer).QueryIntents(m, &intentRegistryQueryIntentsServer{stream})
}

type IntentRegistry_QueryIntentsServer interface {
	Send(*Intent) error
	grpc.ServerStream
}

type intentRegistryQueryIntentsServer struct {
	grpc.ServerStream
}

func (x *intentRegistryQueryIntentsServer) Send(m *Intent) error {
	return x.ServerStream.SendMsg(m)
}

var _IntentRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "intent.IntentRegistry",
	HandlerType: (*IntentRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddIntent",
			Handler:    _IntentRegistry_AddIntent_Handler,
		},
		{
			MethodName: "DisableIntent",
			Handler:    _IntentRegistry_DisableIntent_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "QueryIntents",
			Handler:       _IntentRegistry_QueryIntents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "intent.proto",
}

func init() { proto.RegisterFile("intent.proto", fileDescriptor_intent_6a6870634aea5606) }

var fileDescriptor_intent_6a6870634aea5606 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4f, 0x4f, 0x3a, 0x31,
	0x10, 0xa5, 0xfc, 0x60, 0x81, 0xf9, 0xe1, 0xc6, 0x54, 0x62, 0x9a, 0xd5, 0x03, 0xd9, 0x18, 0xc2,
	0x89, 0x28, 0x5e, 0x8c, 0x17, 0x62, 0xe2, 0x85, 0x78, 0x92, 0x6f, 0x00, 0xe9, 0x04, 0x9b, 0x2c,
	0xdd, 0xb5, 0x2d, 0xc6, 0xfd, 0xb2, 0xfa, 0x55, 0x4c, 0xdb, 0x2d, 0x61, 0x37, 0x98, 0x78, 0xeb,
	0x9b, 0xf7, 0x66, 0xde, 0xfc, 0x29, 0x0c, 0x85, 0x34, 0x28, 0xcd, 0xac, 0x50, 0xb9, 0xc9, 0x69,
	0xe4, 0x51, 0xfa, 0x45, 0x20, 0x5a, 0xba, 0x27, 0x8d, 0xa1, 0x2d, 0x38, 0x23, 0x63, 0x32, 0x1d,
	0xac, 0xda, 0x82, 0xd3, 0x04, 0xfa, 0x1a, 0xd5, 0x07, 0xaa, 0x25, 0x67, 0x6d, 0x17, 0x3d, 0x60,
	0x4a, 0xa1, 0x23, 0xd7, 0x3b, 0x64, 0xff, 0x5c, 0xdc, 0xbd, 0xe9, 0x08, 0xba, 0x0a, 0xb7, 0xf8,
	0xc9, 0x3a, 0x2e, 0xe8, 0x01, 0x65, 0xd0, 0xdb, 0xa1, 0x34, 0x22, 0x97, 0xac, 0x3b, 0x26, 0xd3,
	0xfe, 0x2a, 0x40, 0x5b, 0x5f, 0xa1, 0x2e, 0x72, 0xa9, 0x91, 0x45, 0xbe, 0x7e, 0xc0, 0x96, 0x43,
	0xc9, 0x8b, 0x5c, 0x48, 0xc3, 0x7a, 0x9e, 0x0b, 0xd8, 0x7a, 0xbf, 0x61, 0x56, 0xb0, 0xbe, 0xf7,
	0xb6, 0x6f, 0xeb, 0x82, 0x72, 0xbd, 0xc9, 0x90, 0xb3, 0x81, 0x77, 0xa9, 0x60, 0x7a, 0x07, 0x17,
	0xaf, 0x7b, 0x54, 0xa5, 0x1f, 0x52, 0xaf, 0xf0, 0x7d, 0x8f, 0xda, 0xd4, 0x86, 0x23, 0xf5, 0xe1,
	0xd2, 0x47, 0x38, 0x7f, 0xe2, 0xdc, 0x27, 0x04, 0xfd, 0x04, 0xaa, 0x8d, 0x39, 0xf5, 0xff, 0x79,
	0x3c, 0xab, 0xd6, 0x59, 0xc9, 0xc2, 0x3e, 0x1f, 0x20, 0x3e, 0xca, 0x2d, 0xb2, 0xf2, 0xcf, 0x99,
	0x13, 0x18, 0x3d, 0x0b, 0x6d, 0x9b, 0xae, 0x3b, 0x37, 0xce, 0x92, 0xde, 0x00, 0x6d, 0xe8, 0xac,
	0x4b, 0x43, 0x35, 0xff, 0x26, 0x10, 0x07, 0x7e, 0x2b, 0xb4, 0x51, 0x25, 0x5d, 0xc0, 0xe0, 0xd0,
	0x1a, 0x65, 0xa1, 0x8b, 0xe6, 0xa4, 0xc9, 0xe5, 0x09, 0xa6, 0xc8, 0xca, 0xb4, 0x45, 0x5f, 0xe0,
	0xac, 0xe6, 0x4c, 0xaf, 0x83, 0xf4, 0x54, 0xe3, 0x49, 0xf2, 0x0b, 0xeb, 0x8b, 0x2d, 0x60, 0x78,
	0x7c, 0x17, 0x7a, 0x15, 0xd4, 0x27, 0xae, 0x95, 0x34, 0x76, 0x96, 0xb6, 0x6e, 0xc9, 0x26, 0x72,
	0x1f, 0xf9, 0xfe, 0x27, 0x00, 0x00, 0xff, 0xff, 0x39, 0xa9, 0x00, 0x1d, 0xd8, 0x02, 0x00, 0x00,
}
