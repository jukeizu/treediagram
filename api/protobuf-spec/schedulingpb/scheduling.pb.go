// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: scheduling.proto

package schedulingpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Minute     string `protobuf:"bytes,1,opt,name=minute,proto3" json:"minute,omitempty"`
	Hour       string `protobuf:"bytes,2,opt,name=hour,proto3" json:"hour,omitempty"`
	DayOfMonth string `protobuf:"bytes,3,opt,name=dayOfMonth,proto3" json:"dayOfMonth,omitempty"`
	Month      string `protobuf:"bytes,4,opt,name=month,proto3" json:"month,omitempty"`
	DayOfWeek  string `protobuf:"bytes,5,opt,name=dayOfWeek,proto3" json:"dayOfWeek,omitempty"`
	Year       string `protobuf:"bytes,6,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{0}
}

func (x *Schedule) GetMinute() string {
	if x != nil {
		return x.Minute
	}
	return ""
}

func (x *Schedule) GetHour() string {
	if x != nil {
		return x.Hour
	}
	return ""
}

func (x *Schedule) GetDayOfMonth() string {
	if x != nil {
		return x.DayOfMonth
	}
	return ""
}

func (x *Schedule) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *Schedule) GetDayOfWeek() string {
	if x != nil {
		return x.DayOfWeek
	}
	return ""
}

func (x *Schedule) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string    `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Source      string    `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Content     string    `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Endpoint    string    `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Destination string    `protobuf:"bytes,6,opt,name=destination,proto3" json:"destination,omitempty"`
	Schedule    *Schedule `protobuf:"bytes,7,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Enabled     bool      `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Created     int32     `protobuf:"varint,9,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Job) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Job) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Job) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Job) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *Job) GetSchedule() *Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *Job) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Job) GetCreated() int32 {
	if x != nil {
		return x.Created
	}
	return 0
}

type CreateJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string    `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Source      string    `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Content     string    `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Endpoint    string    `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Destination string    `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
	Schedule    *Schedule `protobuf:"bytes,6,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *CreateJobRequest) Reset() {
	*x = CreateJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobRequest) ProtoMessage() {}

func (x *CreateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobRequest.ProtoReflect.Descriptor instead.
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{2}
}

func (x *CreateJobRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateJobRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CreateJobRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateJobRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *CreateJobRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *CreateJobRequest) GetSchedule() *Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type CreateJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *CreateJobReply) Reset() {
	*x = CreateJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobReply) ProtoMessage() {}

func (x *CreateJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobReply.ProtoReflect.Descriptor instead.
func (*CreateJobReply) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{3}
}

func (x *CreateJobReply) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type JobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *JobsRequest) Reset() {
	*x = JobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobsRequest) ProtoMessage() {}

func (x *JobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobsRequest.ProtoReflect.Descriptor instead.
func (*JobsRequest) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{4}
}

func (x *JobsRequest) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type JobsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *JobsReply) Reset() {
	*x = JobsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobsReply) ProtoMessage() {}

func (x *JobsReply) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobsReply.ProtoReflect.Descriptor instead.
func (*JobsReply) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{5}
}

func (x *JobsReply) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type RunJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *RunJobsRequest) Reset() {
	*x = RunJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunJobsRequest) ProtoMessage() {}

func (x *RunJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunJobsRequest.ProtoReflect.Descriptor instead.
func (*RunJobsRequest) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{6}
}

func (x *RunJobsRequest) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type RunJobsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *RunJobsReply) Reset() {
	*x = RunJobsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunJobsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunJobsReply) ProtoMessage() {}

func (x *RunJobsReply) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunJobsReply.ProtoReflect.Descriptor instead.
func (*RunJobsReply) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{7}
}

func (x *RunJobsReply) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type DisableJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DisableJobRequest) Reset() {
	*x = DisableJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableJobRequest) ProtoMessage() {}

func (x *DisableJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableJobRequest.ProtoReflect.Descriptor instead.
func (*DisableJobRequest) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{8}
}

func (x *DisableJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DisableJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Enabled bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *DisableJobReply) Reset() {
	*x = DisableJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scheduling_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableJobReply) ProtoMessage() {}

func (x *DisableJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_scheduling_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableJobReply.ProtoReflect.Descriptor instead.
func (*DisableJobReply) Descriptor() ([]byte, []int) {
	return file_scheduling_proto_rawDescGZIP(), []int{9}
}

func (x *DisableJobReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DisableJobReply) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

var File_scheduling_proto protoreflect.FileDescriptor

var file_scheduling_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x62,
	0x22, 0x9e, 0x01, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x79,
	0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x61, 0x79, 0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x79, 0x4f, 0x66, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x22, 0x85, 0x02, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67,
	0x70, 0x62, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x35, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f,
	0x62, 0x22, 0x21, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x25, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x4a,
	0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x4a,
	0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x35,
	0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25,
	0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x0f, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x32, 0xa4, 0x02, 0x0a, 0x0a, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x04, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67,
	0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x1c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x70, 0x62, 0x2e, 0x52, 0x75, 0x6e, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67,
	0x70, 0x62, 0x2e, 0x52, 0x75, 0x6e, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x10,
	0x5a, 0x0e, 0x2e, 0x3b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scheduling_proto_rawDescOnce sync.Once
	file_scheduling_proto_rawDescData = file_scheduling_proto_rawDesc
)

func file_scheduling_proto_rawDescGZIP() []byte {
	file_scheduling_proto_rawDescOnce.Do(func() {
		file_scheduling_proto_rawDescData = protoimpl.X.CompressGZIP(file_scheduling_proto_rawDescData)
	})
	return file_scheduling_proto_rawDescData
}

var file_scheduling_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_scheduling_proto_goTypes = []interface{}{
	(*Schedule)(nil),          // 0: schedulingpb.Schedule
	(*Job)(nil),               // 1: schedulingpb.Job
	(*CreateJobRequest)(nil),  // 2: schedulingpb.CreateJobRequest
	(*CreateJobReply)(nil),    // 3: schedulingpb.CreateJobReply
	(*JobsRequest)(nil),       // 4: schedulingpb.JobsRequest
	(*JobsReply)(nil),         // 5: schedulingpb.JobsReply
	(*RunJobsRequest)(nil),    // 6: schedulingpb.RunJobsRequest
	(*RunJobsReply)(nil),      // 7: schedulingpb.RunJobsReply
	(*DisableJobRequest)(nil), // 8: schedulingpb.DisableJobRequest
	(*DisableJobReply)(nil),   // 9: schedulingpb.DisableJobReply
}
var file_scheduling_proto_depIdxs = []int32{
	0, // 0: schedulingpb.Job.schedule:type_name -> schedulingpb.Schedule
	0, // 1: schedulingpb.CreateJobRequest.schedule:type_name -> schedulingpb.Schedule
	1, // 2: schedulingpb.CreateJobReply.job:type_name -> schedulingpb.Job
	1, // 3: schedulingpb.JobsReply.jobs:type_name -> schedulingpb.Job
	1, // 4: schedulingpb.RunJobsReply.jobs:type_name -> schedulingpb.Job
	2, // 5: schedulingpb.Scheduling.Create:input_type -> schedulingpb.CreateJobRequest
	4, // 6: schedulingpb.Scheduling.Jobs:input_type -> schedulingpb.JobsRequest
	6, // 7: schedulingpb.Scheduling.Run:input_type -> schedulingpb.RunJobsRequest
	8, // 8: schedulingpb.Scheduling.Disable:input_type -> schedulingpb.DisableJobRequest
	3, // 9: schedulingpb.Scheduling.Create:output_type -> schedulingpb.CreateJobReply
	5, // 10: schedulingpb.Scheduling.Jobs:output_type -> schedulingpb.JobsReply
	7, // 11: schedulingpb.Scheduling.Run:output_type -> schedulingpb.RunJobsReply
	9, // 12: schedulingpb.Scheduling.Disable:output_type -> schedulingpb.DisableJobReply
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_scheduling_proto_init() }
func file_scheduling_proto_init() {
	if File_scheduling_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scheduling_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduling_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduling_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduling_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduling_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduling_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduling_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduling_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunJobsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduling_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scheduling_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scheduling_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scheduling_proto_goTypes,
		DependencyIndexes: file_scheduling_proto_depIdxs,
		MessageInfos:      file_scheduling_proto_msgTypes,
	}.Build()
	File_scheduling_proto = out.File
	file_scheduling_proto_rawDesc = nil
	file_scheduling_proto_goTypes = nil
	file_scheduling_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SchedulingClient is the client API for Scheduling service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchedulingClient interface {
	Create(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*CreateJobReply, error)
	Jobs(ctx context.Context, in *JobsRequest, opts ...grpc.CallOption) (*JobsReply, error)
	Run(ctx context.Context, in *RunJobsRequest, opts ...grpc.CallOption) (*RunJobsReply, error)
	Disable(ctx context.Context, in *DisableJobRequest, opts ...grpc.CallOption) (*DisableJobReply, error)
}

type schedulingClient struct {
	cc grpc.ClientConnInterface
}

func NewSchedulingClient(cc grpc.ClientConnInterface) SchedulingClient {
	return &schedulingClient{cc}
}

func (c *schedulingClient) Create(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*CreateJobReply, error) {
	out := new(CreateJobReply)
	err := c.cc.Invoke(ctx, "/schedulingpb.Scheduling/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulingClient) Jobs(ctx context.Context, in *JobsRequest, opts ...grpc.CallOption) (*JobsReply, error) {
	out := new(JobsReply)
	err := c.cc.Invoke(ctx, "/schedulingpb.Scheduling/Jobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulingClient) Run(ctx context.Context, in *RunJobsRequest, opts ...grpc.CallOption) (*RunJobsReply, error) {
	out := new(RunJobsReply)
	err := c.cc.Invoke(ctx, "/schedulingpb.Scheduling/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulingClient) Disable(ctx context.Context, in *DisableJobRequest, opts ...grpc.CallOption) (*DisableJobReply, error) {
	out := new(DisableJobReply)
	err := c.cc.Invoke(ctx, "/schedulingpb.Scheduling/Disable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SchedulingServer is the server API for Scheduling service.
type SchedulingServer interface {
	Create(context.Context, *CreateJobRequest) (*CreateJobReply, error)
	Jobs(context.Context, *JobsRequest) (*JobsReply, error)
	Run(context.Context, *RunJobsRequest) (*RunJobsReply, error)
	Disable(context.Context, *DisableJobRequest) (*DisableJobReply, error)
}

// UnimplementedSchedulingServer can be embedded to have forward compatible implementations.
type UnimplementedSchedulingServer struct {
}

func (*UnimplementedSchedulingServer) Create(context.Context, *CreateJobRequest) (*CreateJobReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSchedulingServer) Jobs(context.Context, *JobsRequest) (*JobsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Jobs not implemented")
}
func (*UnimplementedSchedulingServer) Run(context.Context, *RunJobsRequest) (*RunJobsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedSchedulingServer) Disable(context.Context, *DisableJobRequest) (*DisableJobReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disable not implemented")
}

func RegisterSchedulingServer(s *grpc.Server, srv SchedulingServer) {
	s.RegisterService(&_Scheduling_serviceDesc, srv)
}

func _Scheduling_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulingServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedulingpb.Scheduling/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulingServer).Create(ctx, req.(*CreateJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduling_Jobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulingServer).Jobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedulingpb.Scheduling/Jobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulingServer).Jobs(ctx, req.(*JobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduling_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulingServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedulingpb.Scheduling/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulingServer).Run(ctx, req.(*RunJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduling_Disable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulingServer).Disable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schedulingpb.Scheduling/Disable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulingServer).Disable(ctx, req.(*DisableJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scheduling_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schedulingpb.Scheduling",
	HandlerType: (*SchedulingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Scheduling_Create_Handler,
		},
		{
			MethodName: "Jobs",
			Handler:    _Scheduling_Jobs_Handler,
		},
		{
			MethodName: "Run",
			Handler:    _Scheduling_Run_Handler,
		},
		{
			MethodName: "Disable",
			Handler:    _Scheduling_Disable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scheduling.proto",
}
